buildscript {
    repositories {
        mavenLocal()
        maven { url = 'https://maven.parchmentmc.org' }
        maven { url = 'https://files.minecraftforge.net/maven' }
        mavenCentral()
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:[5.1.26,)'
    }
}

plugins {
    id 'eclipse'
}

ext {
    MAPPING_CHANNEL = 'official'
    MAPPING_VERSION = '1.18.1'
    MC_VERSION = '1.18.1'
    MCP_VERSION = '20211210.034407'
    SPI_VERSION = '4.0.10'
}

group = 'Modern-Minecraft-Decompiler'
version = '1.0.0'

subprojects {
    apply plugin: 'eclipse'

    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            name = 'forge'
            url = 'https://maven.minecraftforge.net/'
        }
    }
}

project(':mcp') {
    apply plugin: 'net.minecraftforge.gradle.mcp'
    tasks.withType(AbstractPublishToMaven.class).forEach{tsk -> tsk.enabled = false } // We don't want to publish anything
    mcp {
        config MC_VERSION + '-' + MCP_VERSION
        pipeline = 'joined'
    }
}

project(':clean') {
    evaluationDependsOn(':mcp')
    apply plugin: 'net.minecraftforge.gradle.patcher'
    tasks.withType(AbstractPublishToMaven.class).forEach{tsk -> tsk.enabled = false } // We don't want to publish anything

    dependencies {
        implementation 'net.minecraftforge:forgespi:' + SPI_VERSION
    }

    patcher {
        parent = project(':mcp')
        mcVersion = MC_VERSION
        patchedSrc = file('src/main/java')

        mappings channel: MAPPING_CHANNEL, version: MAPPING_VERSION

        runs {
            clean_client {
                client true
                taskName 'clean_client'
                ideaModule "${rootProject.name}.${project.name}.main"

                main 'net.minecraft.client.main.Main'
                workingDirectory project.file('run')

                args '--gameDir', '.'
                args '--version', MC_VERSION
                args '--assetsDir', downloadAssets.output
                args '--assetIndex', '{asset_index}'
                args '--accessToken', '0'
            }

            clean_server {
                client false
                taskName 'clean_server'
                ideaModule "${rootProject.name}.${project.name}.main"

                main 'net.minecraft.server.Main'
                workingDirectory project.file('run')
            }
        }
    }
}

task setup() {
    group = "setup"
    description = "Setups the dev workspace"
    dependsOn ':clean:extractMapped'
}
